// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init


generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())  
  auth_user_id String @unique
  name String 
  avartar_url String?
  timezone String 
  settings Json

  //Relations 
  sessions Session[]
  tags Tag[]
  tasks Task[]
}

model Session {
  id String @id @default(uuid())
  user_id String
  start_at DateTime 
  end_at DateTime
  break_time Int
  completed Boolean
  created_at DateTime
  tag_id String 

  //Relations 
  distractions Distraction[]
  breaks Break[]
  user User @relation(fields: [user_id], references: [id])
  tag Tag @relation(fields: [tag_id], references: [id])
} 

model Tag {
  id String @id @default(uuid())
  user_id String 
  name String
  color String
  created_at DateTime

  //Relations 
  sessions Session[]
  user User @relation(fields: [user_id], references: [id])
}

model Distraction {
  id String @id @default(uuid())
  session_id String 
  name String
  occured_at DateTime
  created_at DateTime

  //Relations
  session Session @relation(fields: [session_id], references: [id])
}

model Task {
  id String @id @default(uuid())
  user_id String
  name String 
  status String
  created_at DateTime
  updated_at DateTime

  //Relations
  user User @relation(fields: [user_id], references: [id])
}

model Break {
  id String @id @default(uuid())
  session_id String
  type String
  start_time DateTime
  end_time DateTime

  //Relations
  session Session @relation(fields: [session_id], references: [id])
}


